import { useState } from "react";
import styles from "./Register.module.css";
export default function Register() {
  const [username, setUsername] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  const [password, setPassword] = useState("");
  const [role, setRole] = useState("student");
  const [roleKey, setRoleKey] = useState("");
  const [message, setMessage] = useState("");

  const handleRegister = async (e) => {
    e.preventDefault();
    const res = await fetch("https://b.sultonoway.uz/auth/register", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, phoneNumber, password, role, roleKey }),
    });

    const data = await res.json();
    if (res.ok) {
      setMessage("‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!");
    } else {
      setMessage("‚ùå " + data.message);
    }
  };

  return (
    <div className={styles.registerContainer}>
      <form onSubmit={handleRegister} className={styles.registerForm}>
        <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>

        <input
          type="text"
          placeholder="–ò–º—è"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
        />
        
        <input
          type="text"
          placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
          value={phoneNumber}
          onChange={(e) => setPhoneNumber(e.target.value)}
        />
        
        <input
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />

        <select
          value={role}
          onChange={(e) => setRole(e.target.value)}
        >
          <option value="student">–£—á–µ–Ω–∏–∫</option>
          <option value="teacher">–£—á–∏—Ç–µ–ª—å</option>
          <option value="admin">–ê–¥–º–∏–Ω</option>
          <option value="panda">üêº –°—É–ø–µ—Ä—Ä–æ–ª—å (panda)</option>
        </select>

        {role !== "student" && (
          <input
            type="text"
            placeholder="–ö–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ (roleKey)"
            value={roleKey}
            onChange={(e) => setRoleKey(e.target.value)}
          />
        )}

        <button type="submit">
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        </button>
        
        <audio src="admin" controls className={styles.audioPlayer}></audio>

        {message && (
          <div className={`${styles.message} ${message.includes('‚úÖ') ? styles.success : styles.error}`}>
            {message}
          </div>
        )}
      </form>
    </div>
  );
}
